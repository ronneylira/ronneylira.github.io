[{"content":"In this article I\u0026rsquo;m going to cover handy shortcuts that can make your life in using git in the terminal faster and more convenient.\nI really love using Windows Terminal, it allows you to use any type of shell that you want, customize it and extend it to the limit of your own imagination. I cannot recommend enough the great article from Scott Hanselman that teaches you how to unlock most of the potential within Windows Terminal, really making it your own.\nOnce you get use to working with the terminal is pretty hard to go back, the speed which you are used to writing the commands and your own shortcuts make it a flow like experience to daily work.\nA few of the things that can help you on your daily work are git shortcuts\n#git shortcuts Git shortcuts are just another name for the git configuration file, this being a global git config setup that essentially dictates how git should behave on your dev box.\nthe only thing you need to get started is to open your terminal and type in a command like this one\ngit config --global alias.co checkout this will append a configuration setting in your .git config file and will allow you to replace the ol'\ngit checkout BRANCH_NAME for a simpler\ngit co BRANCH_NAME that might seem small, but you are saving 6 characters multiple times a day. Measure that in a year, or even your professional life.\nlikewise other commands can be simplified. Here is a list of the ones I use:\nto create a branch git config --global alias.br branch to commit git config --global alias.ci commit to review your current status git config --global alias.st status to check the last commit git config --global alias.last \u0026#39;log -1 HEAD\u0026#39; to cherry pick a commit\ngit config --global alias.cp cherry-pick if you also unlock the power of WSL you can extend git (and windows for that matter) with the help of linux commands and applications in one seamless shortcut:\nto prune and delete old local branches git config --global alias.purge \u0026#39;!git fetch -p \u0026amp;\u0026amp; git branch -vv | awk \u0026#34;/: gone]/{print \\$1}\u0026#34; | xargs git branch -d\u0026#39; with the help of this shortcut\ngit prune you automatically fetch and prune remote branches, list them, send it to linux\u0026rsquo;s awk to filter out only the pruned ones and then feed those to the delete command.\njust make sure that you have git, wsl and a distro with awk installed in your box to make use of this shortcut.\nfor today that\u0026rsquo;s it. thanks for reading.\n","permalink":"https://ronneylira.github.io/posts/git-shortcuts/","summary":"In this article I\u0026rsquo;m going to cover handy shortcuts that can make your life in using git in the terminal faster and more convenient.\nI really love using Windows Terminal, it allows you to use any type of shell that you want, customize it and extend it to the limit of your own imagination. I cannot recommend enough the great article from Scott Hanselman that teaches you how to unlock most of the potential within Windows Terminal, really making it your own.","title":"Git Shortcuts"}]