<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ronney Lira</title>
    <link>https://ronneylira.com/</link>
    <description>Recent content on Ronney Lira</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 06 Mar 2024 10:21:39 +0100</lastBuildDate>
    <atom:link href="https://ronneylira.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Build Performance With Roslyn</title>
      <link>https://ronneylira.com/posts/build-performance-roslyn/</link>
      <pubDate>Wed, 06 Mar 2024 10:21:39 +0100</pubDate>
      <guid>https://ronneylira.com/posts/build-performance-roslyn/</guid>
      <description>Roslyn has been kicking around for a couple of years now, and it&amp;rsquo;s got some seriously cool tricks up its sleeve for how you build and keep your code in line.
I&amp;rsquo;m blown away by how these new goodies with .NET aren&amp;rsquo;t just for the new stack (you know, dotnet core and all that jazz), but they&amp;rsquo;re also giving a boost to the old classics we still rely on.
In my current company, we&amp;rsquo;ve got a monolithic app that&amp;rsquo;s a real time hog.</description>
    </item>
    <item>
      <title>Gitleaks</title>
      <link>https://ronneylira.com/posts/gitleaks/</link>
      <pubDate>Thu, 11 Jan 2024 15:44:11 +0100</pubDate>
      <guid>https://ronneylira.com/posts/gitleaks/</guid>
      <description>I&amp;rsquo;ve put in some effort in recent months to remove secrets from multiple legacy code bases. That was the easy part, the though part is to change culture to prevent new secrets from leaking into the codebase in the future.
Luckily there are tools to help out with that: Gitleaks was a cool finding. It helps to find secrets before you commit them using different regular expressions that you can also extend.</description>
    </item>
    <item>
      <title>NU5026: The file to be packed was not found on disk</title>
      <link>https://ronneylira.com/posts/nu5025-error-the-file-to-be-packed-was-not-found-on-disk/</link>
      <pubDate>Mon, 30 Oct 2023 10:50:15 +0100</pubDate>
      <guid>https://ronneylira.com/posts/nu5025-error-the-file-to-be-packed-was-not-found-on-disk/</guid>
      <description>For a long time, our company relied on MyGet as our private package repository. However, a recent outage caused a 24-hour delay in our work, so we&amp;rsquo;ve decided to stop using MyGet and switch to GitHub Artifacts as our new provider.
This situation presented us with an excellent chance to enhance the quality of our pipelines by implementing some standard tools and protecting us from the risks associated with broad access to these resources.</description>
    </item>
    <item>
      <title>Chained Token Credential</title>
      <link>https://ronneylira.com/posts/chained-token-credential/</link>
      <pubDate>Tue, 26 Sep 2023 10:36:26 +0000</pubDate>
      <guid>https://ronneylira.com/posts/chained-token-credential/</guid>
      <description>In this article, we&amp;rsquo;ll explore a handy trick that can make your development journey more enjoyable. We&amp;rsquo;re here to share some knowledge and help you understand a clever coding strategy.
Azure and Dotnet make a fantastic team, offering a bunch of powerful tools that work seamlessly together, making your coding adventures smoother. Today, we&amp;rsquo;re diving into the world of Azure AD&amp;rsquo;s authentication system, which can make switching between development and production modes a breeze.</description>
    </item>
    <item>
      <title>Git Shortcuts</title>
      <link>https://ronneylira.com/posts/git-shortcuts/</link>
      <pubDate>Tue, 25 Apr 2023 08:59:47 +0000</pubDate>
      <guid>https://ronneylira.com/posts/git-shortcuts/</guid>
      <description>In this article, I&amp;rsquo;m going to cover handy shortcuts that can make your life in using git in the terminal faster and more convenient.
I really love using Windows Terminal, it allows you to use any type of shell that you want, customize it, and extend it to the limit of your own imagination. I cannot recommend enough the great article from Scott Hanselman that teaches you how to unlock most of the potential within Windows Terminal, really making it your own.</description>
    </item>
  </channel>
</rss>
